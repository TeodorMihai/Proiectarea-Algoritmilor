# include <fstream>
# include <cstring>
# include <algorithm>
# include <vector>
 
# define dim 1029
 
using namespace std;
 
ifstream f("note.in");
ofstream g("note.out");
 
bool a[ dim][ 105 ];
int b[ dim ];
int dp[ dim ][ dim ];
 
int n, m, l;
 
void citire()
{
    int i, j;
    int var;
     
    f >> n >> m;
    for ( i = 1 ; i <= n ; i++ )
        for ( j = 1 ; j <= m ; j++ )
        {
            f >> var;
            a[ j ][ var ] = 1;
        }
         
   f >> l;
   for ( i = 1 ; i <= l ; i++ )
       f >> b[ i ];
}
 
void dinamica()
{
    int i, j;
     
     
    for ( i = 1 ; i <= l ; i++ )
        dp[ 0 ][ i ] = i;
    for ( i = 1 ; i <= m ; i++ )
        dp[ i ][ 0 ] = i;
     
     
    for ( i = 1 ; i <= m ; i++ ) // 8
        for ( j = 1 ; j <= l ; j++ ) // 7
            if ( a[ i ][ b[ j ] ] == true )
                dp[ i ][ j ] = dp[ i - 1 ][ j - 1 ];
            else
                dp[ i ][ j ] = min( dp[ i - 1 ][ j ] + 1, min( dp[ i ][ j - 1 ] + 1, dp[ i - 1 ][ j - 1 ] + 1 ) );
}
 
void afisare()
{
    int i, j;
     
    /*
    for ( i = 1 ; i <= m ; i++ )
    {
        for ( j = 1 ; j <= l ; j++ )
            g << dp[ i ][ j ] << " ";
        g << "\n";
    }
    */
     
    g << dp[ m ][ l ]  ;
}
 
int main()
{
    citire();
    dinamica();
    afisare();
    return 0;
}